
@{
    Layout = "~/Administration/Views/Shared/_AdminLayout.cshtml";

    var defaultGridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;

    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Misc.RailPointofSale");
}

@model Nop.Plugin.Misc.RailPointofSale.Models.RailPointofSaleOrderListModel
@using Nop.Core.Domain.Tax;
@using Nop.Core.Domain.Orders;
@using Nop.Services
@using Nop.Web.Framework

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="content-header clearfix">
        <h1 class="pull-left">
            rPoint-of-Sale (rPOS) Orders
            <small><a href="/Admin/Plugin/ConfigureMiscPlugin?systemName=Misc.RailPointofSale">Configure Point-of-Sale</a></small>
        </h1>
        <div class="pull-right">
            <span>@Model.StoreCityStatePostal  (Tax Rate: @Model.StoreTaxRate)</span>
            <button type="button" name="process-order" class="btn bg-green" onclick="location.href='@Url.Action("Add", "PointofSaleOrder")'">
                <i class="fa fa-plus"></i>
                New rPOS Order
            </button>
        </div>
    </div>

    <div class="content">
        <div class="form-horizontal">
            <div class="panel-group">
                <div class="panel panel-default panel-search">
                    <div class="panel-body">
                        <div class="row">
                            @*Left Side*@
                            <div class="col-md-6">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.NopLabelFor(model => model.StartDate)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.NopEditorFor(model => model.StartDate)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.NopLabelFor(model => model.EndDate)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.NopEditorFor(model => model.EndDate)
                                    </div>
                                </div>
                                <div class="form-group" @(Model.IsLoggedInAsVendor ? Html.Raw("style='display: none;'") : null)>
                                    <div class="col-md-4">
                                        @Html.NopLabelFor(model => model.OrderStatusIds)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.OrderStatusIds, new { SelectList = Model.AvailableOrderStatuses })
                                    </div>
                                </div>
                            </div>
                            @*Right Side*@
                            <div class="col-md-6">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.NopLabelFor(model => model.ProductId)
                                    </div>
                                    <div class="col-md-8">
                                        <input type="text" id="search-product-name" autocomplete="off" class="form-control" />
                                        <span id="search-product-friendly-name"></span>
                                        <button type="button" id="search-product-clear" class="btn bg-gray" style="display: none; margin-top: 5px;">@T("Admin.Common.Clear")</button>

                                        @Html.TextBoxFor(model => model.ProductId, new { autocomplete = "off", style = "display:none;" })
                                        <script type="text/javascript">
                                            $(document).ready(function() {
                                                $('#search-product-name').autocomplete({
                                                    delay: 500,
                                                    minLength: 3,
                                                    source: '@(Url.Action("ProductSearchAutoComplete"))',
                                                    select: function(event, ui) {
                                                        $('#@Html.FieldIdFor(model => model.ProductId)').val(ui.item.productid);
                                                        $('#search-product-friendly-name').text(ui.item.label);

                                                        $('#search-product-clear').show();
                                                        return false;
                                                    }
                                                });

                                                //remove button
                                                $('#search-product-clear').click(function() {
                                                    $('#@Html.FieldIdFor(model => model.ProductId)').val('0');
                                                    $('#search-product-friendly-name').text('');
                                                    $('#search-product-clear').hide();
                                                    return false;
                                                });
                                            });
                                        </script>
                                    </div>
                                </div>
                                <div class="form-group" @(Model.AvailableVendors.SelectionIsNotPossible() || Model.IsLoggedInAsVendor ? Html.Raw("style='display: none;'") : null)>
                                    <div class="col-md-4">
                                        @Html.NopLabelFor(model => model.VendorId)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.NopDropDownList("VendorId", Model.AvailableVendors)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.NopLabelFor(model => model.GoDirectlyToNumber)
                                    </div>
                                    <div class="col-md-8">
                                        <div class="input-group input-group-short">
                                            @Html.NopEditorFor(model => model.GoDirectlyToNumber)
                                            <span class="input-group-btn">
                                                <button type="submit" id="go-to-order-by-number" name="go-to-order-by-number" class="btn btn-info btn-flat">
                                                    @T("Admin.Common.Go")
                                                </button>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-7 col-md-offset-5">
                                <button type="button" id="search-orders" class="btn btn-primary btn-search">
                                    <i class="fa fa-search"></i>
                                    @T("Admin.Common.Search")
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div id="orders-grid"></div>

                        <script>
                            $(document).ready(function() {
                                $("#orders-grid").kendoGrid({
                                    dataSource: {
                                        type: "json",
                                        transport: {
                                            read: {
                                                url: "@Html.Raw(Url.Action("OrderList", "PointofSaleOrder"))",
                                                type: "POST",
                                                dataType: "json",
                                                data: additionalData
                                            }
                                        },
                                        schema: {
                                            data: "Data",
                                            total: "Total",
                                            errors: "Errors"
                                        },
                                        requestEnd: function (e) {
                                            if (e.type == "read") {
                                                var response = e.response;
                                                if (response) {
                                                    //store extra data
                                                    reportAggregates = e.response["ExtraData"];
                                                }
                                            }
                                        },
                                        error: function(e) {
                                            display_kendoui_grid_error(e);
                                            // Cancel the changes
                                            this.cancelChanges();
                                        },
                                        pageSize: @(defaultGridPageSize),
                                        serverPaging: true,
                                        serverFiltering: true,
                                        serverSorting: true
                                    },
                                    pageable: {
                                        refresh: true,
                                        pageSizes: [@(gridPageSizes)]
                                    },
                                    editable: {
                                        confirmation: "@T("Admin.Common.DeleteConfirmation")",
                                        mode: "inline"
                                    },
                                    scrollable: false,
                                    dataBound: onDataBound,
                                    columns: [
                                        {
                                            field: "Id",
                                            title: "@T("Admin.Orders.Fields.ID")",
                                            width: 80
                                        },
                                        @if (!Model.IsLoggedInAsVendor)
                                        {
                                            //a vendor does not have access to this functionality
                                            <text>{
                                            field: "OrderStatus",
                                            title: "@T("Admin.Orders.Fields.OrderStatus")",
                                            width: 100,
                                            template: '<span class="grid-report-item ' +
                                                '# if(OrderStatusId == 10) {# yellow #} #' +
                                                '# if(OrderStatusId == 20) {# blue #} #' +
                                                '# if(OrderStatusId == 30) {# green #} #' +
                                                '# if(OrderStatusId == 40) {# red #} #' +
                                                '">#=OrderStatus#</span>'
                                        },</text>
                                        }
                                        {
                                            field: "PaymentStatus",
                                            title: "@T("Admin.Orders.Fields.PaymentStatus")",
                                            width: 150
                                        },
                                        {
                                            field: "CustomerEmail",
                                            title: "@T("Admin.Orders.Fields.Customer")",
                                            width: 250,
                                            template: '#=CustomerFullName# (#=CustomerEmail#)'
                                        },
                                        {
                                            field: "StoreName",
                                            title: "@T("Admin.Orders.Fields.Store")",
                                            width: 100
                                        }, {
                                            field: "CreatedOn",
                                            title: "@T("Admin.Orders.Fields.CreatedOn")",
                                            width: 150,
                                            type: "date",
                                            format: "{0:G}"
                                        },
                                        @if (!Model.IsLoggedInAsVendor)
                                        {
                                            //a vendor does not have access to this functionality
                                            <text>{
                                            field: "OrderTotal",
                                            title: "@T("Admin.Orders.Fields.OrderTotal")",
                                            width: 100,
                                            footerTemplate: '<div><strong>@T("Admin.Orders.Report.Summary")</strong></div>' +
                                                                    '<div>@T("Admin.Orders.Report.Profit") <span id=\"aggregator-profit-block\"></span></div>' +
                                                                    '<div>@T("Admin.Orders.Report.Shipping") <span id=\"aggregator-shipping-block\"></span></div>' +
                                                                    '<div>@T("Admin.Orders.Report.Tax") <span id=\"aggregator-tax-block\"></span></div>' +
                                                                    '<div>@T("Admin.Orders.Report.Total") <span id=\"aggregator-total-block\"></span></div>'
                                        },</text>
                                        }
                                        {
                                            field: "Id",
                                            title: "@T("Admin.Common.View")",
                                            width: 50,
                                            template: '<a href="/PointofSaleOrder/Edit/#=Id#">@T("Admin.Common.View")</a>'
                                        }
                                    ]
                                } );
                            });
                        </script>

                        <script type="text/javascript">
                            var selectedIds = [];
                            var reportAggregates = "";

                            $(document).ready(function () {
                                //search button
                                $('#search-orders').click(function () {
                                    //search
                                    var grid = $('#orders-grid').data('kendoGrid');
                                    grid.dataSource.page(1); //new search. Set page size to 1
                                    //grid.dataSource.read(); we already loaded the grid above using "page" function
                                    //clear selected checkboxes
                                    $('.checkboxGroups').attr('checked', false).change();
                                    selectedIds = [];
                                    return false;
                                });

                                $("".concat("#@Html.FieldIdFor(model => model.BillingEmail),",
                                    "#@Html.FieldIdFor(model => model.BillingLastName),",
                                    "#@Html.FieldIdFor(model => model.OrderNotes)")).keydown(function (event) {
                                        if (event.keyCode === 13) {
                                            $("#search-orders").click();
                                            return false;
                                        }
                                    });

                                $("#@Html.FieldIdFor(model => model.GoDirectlyToNumber)").keydown(function(event) {
                                    if (event.keyCode === 13) {
                                        $("#go-to-order-by-number").click();
                                        return false;
                                    }
                                });

                                $('#mastercheckbox').click(function () {
                                    $('.checkboxGroups').attr('checked', $(this).is(':checked')).change();
                                });

                                //wire up checkboxes.
                                $('#orders-grid').on('change', 'input[type=checkbox][id!=mastercheckbox]', function (e) {
                                    var $check = $(this);
                                    if ($check.is(":checked") == true) {
                                        var checked = jQuery.inArray($check.val(), selectedIds);
                                        if (checked == -1) {
                                            //add id to selectedIds.
                                            selectedIds.push($check.val());
                                        }
                                    }
                                    else {
                                        var checked = jQuery.inArray($check.val(), selectedIds);
                                        if (checked > -1) {
                                            //remove id from selectedIds.
                                            selectedIds = $.grep(selectedIds, function (item, index) {
                                                return item != $check.val();
                                            });
                                        }
                                    }
                                    updateMasterCheckbox();
                                });
                            });

                            function additionalData() {
                                var data = {
                                    StartDate: $('#@Html.FieldIdFor(model => model.StartDate)').val(),
                                    EndDate: $('#@Html.FieldIdFor(model => model.EndDate)').val(),
                                    OrderStatusIds: $('#@Html.FieldIdFor(model => model.OrderStatusIds)').val(),
                                    PaymentStatusIds: $('#@Html.FieldIdFor(model => model.PaymentStatusIds)').val(),
                                    ShippingStatusIds: $('#@Html.FieldIdFor(model => model.ShippingStatusIds)').val(),
                                    StoreId: $('#@Html.FieldIdFor(model => model.StoreId)').val(),
                                    VendorId: $('#@Html.FieldIdFor(model => model.VendorId)').val(),
                                    WarehouseId: $('#@Html.FieldIdFor(model => model.WarehouseId)').val(),
                                    BillingEmail: $('#@Html.FieldIdFor(model => model.BillingEmail)').val(),
                                    BillingLastName: $('#@Html.FieldIdFor(model => model.BillingLastName)').val(),
                                    BillingCountryId: $('#@Html.FieldIdFor(model => model.BillingCountryId)').val(),
                                    PaymentMethodSystemName: $('#@Html.FieldIdFor(model => model.PaymentMethodSystemName)').val(),
                                    ProductId: $('#@Html.FieldIdFor(model => model.ProductId)').val(),
                                    OrderNotes: $('#@Html.FieldIdFor(model => model.OrderNotes)').val()
                                };
                                addAntiForgeryToken(data);
                                return data;
                            }

                            function onDataBound(e) {
                                $('#orders-grid input[type=checkbox][id!=mastercheckbox]').each(function () {
                                    var currentId = $(this).val();
                                    var checked = jQuery.inArray(currentId, selectedIds);
                                    //set checked based on if current checkbox's value is in selectedIds.
                                    $(this).attr('checked', checked > -1);
                                });

                                updateMasterCheckbox();

                                //update order totals summary
                                if (reportAggregates != "") {
                                    for (var key in reportAggregates) {
                                        $('#aggregator-profit-block').text(reportAggregates['aggregatorprofit']);
                                        $('#aggregator-shipping-block').text(reportAggregates['aggregatorshipping']);
                                        $('#aggregator-tax-block').text(reportAggregates['aggregatortax']);
                                        $('#aggregator-total-block').text(reportAggregates['aggregatortotal']);
                                    }
                                }
                            }

                            function updateMasterCheckbox() {
                                var numChkBoxes = $('#orders-grid input[type=checkbox][id!=mastercheckbox]').length;
                                var numChkBoxesChecked = $('#orders-grid input[type=checkbox][id!=mastercheckbox]:checked').length;
                                $('#mastercheckbox').attr('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
                            }
                        </script>
                    </div>
                </div>
            </div>
        </div>
    </div>

    

}  
