@{
    Layout = "~/Administration/Views/Shared/_AdminLayout.cshtml";

    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Misc.RailPointofSale");
}

@model AddPosProductModel

@using Nop.Core.Domain.Catalog
@using Nop.Plugin.Misc.RailPointofSale.Models

@{
    //page title
    ViewBag.Title = string.Format(T("Admin.Orders.Products.AddNew.Title2").Text, Model.ProductDetails.Name, Model.ProductDetails.OrderId);

}

@*we add enctype = "multipart/form-data" because "File upload" attribute control type requires it*@
@using (Html.BeginForm("AddProductToPOSOrderDetails", "PointofSaleOrder",
                                                                new RouteValueDictionary(new { orderId = Model.ProductDetails.OrderId, productId = Model.ProductDetails.ProductId }),
                                                                FormMethod.Post,
                                                                new Dictionary<string, Object> { { "enctype", "multipart/form-data" }, { "id", "product-details-form" } }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(false)
    <div class="content-header clearfix">
        <h1 class="pull-left">
            @string.Format(T("Admin.Orders.Products.AddNew.Title2").Text, Model.ProductDetails.Name, Model.ProductDetails.OrderId)
            <small><i class="fa fa-arrow-circle-left"></i>@Html.ActionLink(T("Admin.Orders.Products.AddNew.BackToList").Text, "Edit", new { id = Model.ProductDetails.OrderId })</small>
        </h1>
        <div class="pull-right">
            &nbsp;
        </div>
    </div>

    <div class="content">
        @if (Model.ProductDetails.Warnings.Count > 0)
        {
            <div class="callout callout-danger">
                <ul>
                    @foreach (var warning in Model.ProductDetails.Warnings)
                    {
                        <li>@warning</li>
                    }
                </ul>
            </div>
        }

        <div class="form-horizontal">
            <div class="panel-group">
                @if (Model.ProductDetails.ProductType == ProductType.SimpleProduct)
                {
                    <div class="panel panel-default">
                        <div class="panel-body">
                            <div class="row">
                                <div class="col-md-6">
                                    <h1 style="margin-top: 0;">@Model.AddProduct.Name</h1>
                                    <div class="form-group" style="display: none;">
                                        <div class="col-md-6">
                                            @Html.NopLabelFor(model => model.ProductDetails.UnitPriceInclTax)
                                        </div>
                                        <div class="col-md-6">
                                            @Html.NopEditorFor(model => model.ProductDetails.UnitPriceInclTax)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="col-md-6">
                                            @Html.NopLabelFor(model => model.ProductDetails.UnitPriceExclTax)
                                        </div>
                                        <div class="col-md-6">
                                            @Html.NopEditorFor(model => model.ProductDetails.UnitPriceExclTax)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="col-md-6">
                                            @Html.NopLabelFor(model => model.ProductDetails.Quantity)
                                        </div>
                                        <div class="col-md-6">
                                            @Html.NopEditorFor(model => model.ProductDetails.Quantity)
                                        </div>
                                    </div>
                                    <div class="form-group" style="display: none;">
                                        <div class="col-md-6">
                                            @Html.NopLabelFor(model => model.ProductDetails.SubTotalInclTax)
                                        </div>
                                        <div class="col-md-6">
                                            @Html.NopEditorFor(model => model.ProductDetails.SubTotalInclTax)
                                        </div>
                                    </div>
                                    <div class="form-group" style="display: none;">
                                        <div class="col-md-6">
                                            @Html.NopLabelFor(model => model.ProductDetails.SubTotalExclTax)
                                        </div>
                                        <div class="col-md-6">
                                            @Html.NopEditorFor(model => model.ProductDetails.SubTotalExclTax)
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <h1 style="margin-top: 0;">Details</h1>
                                    <img src="@Model.ProductPicture" />
                                    <p>SKU @Model.AddProduct.Sku</p>
                                    <p>@if (Model.ProductVendor != null)
                                    { @:Vendor @Model.ProductVendor.Name;
                                    } </p>

                                    <p>@Model.AddProduct.ShortDescription</p>

                                </div>
                             </div>
                        </div>
                    </div>

          @Html.Partial("~/Plugins/Misc.RailPointofSale/Views/PointofSaleOrder/_ProductAddAttributes.cshtml", Model.ProductDetails.ProductAttributes, new ViewDataDictionary() { new KeyValuePair<string, object>("productId", Model.ProductDetails.ProductId) })

                    @*var dataDictGiftCard = new ViewDataDictionary();
                    dataDictGiftCard.TemplateInfo.HtmlFieldPrefix = "giftcard";
                    @Html.Partial("_ProductAddGiftCardInfo", Model.ProductDetails.GiftCard, dataDictGiftCard)

                    @Html.Partial("_ProductAddRentalInfo", Model.ProductDetails)*@

                    <div class="panel panel-default">
                        <div class="panel-body">
                            @if (!Model.ProductDetails.AutoUpdateOrderTotals)
                            {
                                <div class="form-group">
                                    <div class="col-md-9 col-md-offset-3">
                                        <p>
                                            <strong>@T("Admin.Orders.Products.AddNew.UpdateTotals")</strong>
                                        </p>
                                    </div>
                                </div>
                            }
                            <div class="form-group">
                                <div class="col-md-9 col-md-offset-3">
                                    <button type="submit" class="btn btn-primary">
                                        @T("Admin.Orders.Products.AddNew")
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                else if (Model.ProductDetails.ProductType == ProductType.GroupedProduct)
                {
                    <div class="panel panel-default">
                        <div class="panel-body">
                            @*TODO add support for grouped products to be added to an existing order*@
                            Grouped products are not currently supported for adding to an existing order
                        </div>
                    </div>
                }
                else
                {
                    <div class="panel panel-default">
                        <div class="panel-body">
                            This product type (unknown) is not currently supported for adding to an existing order
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}